diff --git a/lib/bes/bprocess/bprocess_pool.py b/lib/bes/bprocess/bprocess_pool.py
index b64617b9..17b0f289 100644
--- a/lib/bes/bprocess/bprocess_pool.py
+++ b/lib/bes/bprocess/bprocess_pool.py
@@ -1,6 +1,7 @@
 #-*- coding:utf-8; mode:python; indent-tabs-mode: nil; c-basic-offset: 2; tab-width: 2 -*-
 
 import os
+import mpire
 
 from collections import namedtuple
 from datetime import datetime
@@ -48,15 +49,21 @@ class bprocess_pool(object):
     if dedicated_categories:
       for category, config in dedicated_categories.items():
         config = check.check_bprocess_dedicated_category_config(config)
-        self._pools[category] = multiprocessing.Pool(config.num_processes,
-                                                     initializer = self._worker_initializer,
-                                                     initargs = ( self._worker_number_lock, self._worker_number_value, config.nice, config.initializer ))
+#        self._pools[category] = multiprocessing.Pool(config.num_processes,
+#                                                     initializer = self._worker_initializer,
+#                                                     initargs = ( self._worker_number_lock, self._worker_number_value, config.nice, config.initializer ))
+        self._pools[category] = mpire.WorkerPool(n_jobs = config.num_processes,
+                                                 start_method = 'fork') # 'fork'
+#                                                     initializer = self._worker_initializer,
+#                                                     initargs = ( self._worker_number_lock, self._worker_number_value, config.nice, config.initializer ))
         count = count - config.num_processes
         assert count >= 0
     if count > 0:
-      self._pools['__main'] = multiprocessing.Pool(count,
-                                                   initializer = self._worker_initializer,
-                                                   initargs = ( self._worker_number_lock, self._worker_number_value, None, None ))
+      self._pools['__main'] = mpire.WorkerPool(n_jobs = count,
+                                               start_method = 'fork') # 'fork'
+#      self._pools['__main'] = multiprocessing.Pool(count,
+#                                                   initializer = self._worker_initializer,
+#                                                   initargs = ( self._worker_number_lock, self._worker_number_value, None, None ))
     self._result_queue = self._manager.Queue()
     self._lock = self._manager.Lock()
     self._waiting_queue = bprocess_pool_queue()
@@ -101,8 +108,8 @@ class bprocess_pool(object):
     if not self._pools:
       return
     for _, pool in self._pools.items():
-      pool.terminate()
       pool.join()
+      pool.terminate()
 
   def _pool_for_category(self, category):
     target_category = '__main'
diff --git a/tests/lib/bes/bprocess/test_bprocess_pool_py.py b/tests/lib/bes/bprocess/test_bprocess_pool_py.py
index d2f6d4d7..becdc32b 100755
--- a/tests/lib/bes/bprocess/test_bprocess_pool_py.py
+++ b/tests/lib/bes/bprocess/test_bprocess_pool_py.py
@@ -1,4 +1,4 @@
-#!/usr/bin/env python
+#!/usr/bin/env python3
 #-*- coding:utf-8; mode:python; indent-tabs-mode: nil; c-basic-offset: 2; tab-width: 2 -*-
 
 import copy
