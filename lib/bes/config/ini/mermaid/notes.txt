- brew install node@18
- bes_env_path_append PATH /usr/local/opt/node@18/bin
- ~/proj/bes/lib/bes/config/ini/mermaid
- cd ~/proj/bes/lib/bes/config/ini/mermaid
- npm init
- git add package.json
- npm install mermaid
- git add package-lock.json
- echo node_modules > .gitignore
- git add .gitignore
- cat << EOF > index.html
<!DOCTYPE html>
<html>
<head>
  <script type="module">
    import mermaid from 'mermaid';
    mermaid.initialize({ startOnLoad: true });

    document.addEventListener('DOMContentLoaded', () => {
      mermaid.render('mermaid-diagram', 'graph TD\nA --> B\nB --> C');
    });
  </script>
</head>
<body>
  <div id="mermaid-diagram"></div>
</body>
</html>
EOF
- npm install esbuild



from gpt
Mermaid is a popular graph drawing and diagramming tool that you can use locally without needing a web server or remote connection. To get started with Mermaid on macOS, you'll need to install Node.js and npm (Node Package Manager) and then use npm to install Mermaid. Here are the steps:

1. Install Node.js and npm:

If you don't have Node.js and npm installed on your macOS, you can download and install them from the official website:

    Go to the Node.js download page: https://nodejs.org/
    Download the macOS installer for the LTS version (recommended for stability).
    Follow the installation instructions to install Node.js and npm.

To verify that Node.js and npm are correctly installed, open your terminal and run the following commands:

bash

node -v
npm -v

You should see the installed versions of Node.js and npm.

2. Create a directory for your Mermaid project:

Open your terminal and navigate to the directory where you want to create your Mermaid project. You can use the cd command to navigate through directories.

For example:

bash

cd ~/Documents
mkdir mermaid-project
cd mermaid-project

3. Initialize a Node.js project:

In your project directory, run the following command to initialize a Node.js project. This will create a package.json file that will track your project's dependencies.

bash

npm init -y

4. Install Mermaid:

Now you can use npm to install Mermaid as a dependency for your project:

bash

npm install mermaid

5. Create an HTML file:

Create an HTML file in your project directory (e.g., index.html) and add your Mermaid code to this file. For example:

html

<!DOCTYPE html>
<html>
<head>
  <script type="module">
    import mermaid from 'mermaid';
    mermaid.initialize({ startOnLoad: true });

    document.addEventListener('DOMContentLoaded', () => {
      mermaid.render('mermaid-diagram', 'graph TD\nA --> B\nB --> C');
    });
  </script>
</head>
<body>
  <div id="mermaid-diagram"></div>
</body>
</html>

This code sets up Mermaid and renders a simple flowchart.

6. View your Mermaid diagram:

You can view your Mermaid diagram by opening the HTML file in a web browser.

bash

open index.html

This will open your diagram in your default web browser. You don't need a web server or remote connection; it's all local.

You've now set up Mermaid for local use on your macOS. You can create and modify your diagrams in your HTML files and open them in your browser for visualization.
